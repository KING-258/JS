{"ast":null,"code":"var _jsxFileName = \"/home/el_professor258/Documents/animation/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [displayText, setDisplayText] = useState('');\n  const [index, setIndex] = useState(0);\n  const [cursor, setCursor] = useState(true);\n  const [isAnimating, setIsAnimating] = useState(false);\n  useEffect(() => {\n    if (isAnimating && index < text.length) {\n      const timeoutId = setTimeout(() => {\n        setDisplayText(prev => prev + text[index]);\n        setIndex(prev => prev + 1);\n      }, 150);\n      return () => clearTimeout(timeoutId);\n    } else if (index === text.length) {\n      setIsAnimating(false);\n      setCursor(false);\n    }\n  }, [index, isAnimating, text]);\n\n  // Toggle cursor visibility\n  useEffect(() => {\n    if (isAnimating) {\n      const interval = setInterval(() => {\n        setCursor(prevCursor => !prevCursor);\n      }, 500);\n      return () => clearInterval(interval);\n    }\n  }, [isAnimating]);\n  const startAnimation = () => {\n    setIndex(0);\n    setDisplayText('');\n    setCursor(true);\n    setIsAnimating(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Typing Animation Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: displayText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), cursor && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cursor\",\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something...\",\n        value: text,\n        onChange: e => {\n          setText(e.target.value);\n          setIsAnimating(false); // Stop animation when text changes\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAnimation,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VUo2G+r+9RtJOId0N9UJmLjhqA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","displayText","setDisplayText","index","setIndex","cursor","setCursor","isAnimating","setIsAnimating","length","timeoutId","setTimeout","prev","clearTimeout","interval","setInterval","prevCursor","clearInterval","startAnimation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/el_professor258/Documents/animation/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [displayText, setDisplayText] = useState('');\n  const [index, setIndex] = useState(0);\n  const [cursor, setCursor] = useState(true);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  useEffect(() => {\n    if (isAnimating && index < text.length) {\n      const timeoutId = setTimeout(() => {\n        setDisplayText((prev) => prev + text[index]);\n        setIndex((prev) => prev + 1);\n      }, 150);\n      return () => clearTimeout(timeoutId);\n    } else if (index === text.length) {\n      setIsAnimating(false);\n      setCursor(false);\n    }\n  }, [index, isAnimating, text]);\n\n  // Toggle cursor visibility\n  useEffect(() => {\n    if (isAnimating) {\n      const interval = setInterval(() => {\n        setCursor((prevCursor) => !prevCursor);\n      }, 500);\n      return () => clearInterval(interval);\n    }\n  }, [isAnimating]);\n\n  const startAnimation = () => {\n    setIndex(0);\n    setDisplayText('');\n    setCursor(true);\n    setIsAnimating(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Typing Animation Demo</h1>\n        <div className=\"header-text\">\n          <span>{displayText}</span>\n          {cursor && <span className=\"cursor\">|</span>}\n        </div>\n        <input \n          type=\"text\" \n          placeholder=\"Type something...\" \n          value={text} \n          onChange={(e) => {\n            setText(e.target.value);\n            setIsAnimating(false); // Stop animation when text changes\n          }} \n        />\n        <button onClick={startAnimation}>Start</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}