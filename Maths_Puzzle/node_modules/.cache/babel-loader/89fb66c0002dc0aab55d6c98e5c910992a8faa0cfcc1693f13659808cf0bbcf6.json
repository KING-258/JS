{"ast":null,"code":"var _jsxFileName = \"/home/el_professor258/Documents/math/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst operators = ['+', '-', '*', '/', '%'];\nconst generateRandomNumber = () => Math.floor(Math.random() * 90) + 10; // Two-digit numbers from 10 to 99\nconst generateRandomOperator = () => operators[Math.floor(Math.random() * operators.length)];\nconst generateQuestion = () => {\n  const num1 = generateRandomNumber();\n  const num2 = generateRandomNumber();\n  const operator = generateRandomOperator();\n  let answer;\n  switch (operator) {\n    case '+':\n      answer = num1 + num2;\n      break;\n    case '-':\n      answer = num1 - num2;\n      break;\n    case '*':\n      answer = num1 * num2;\n      break;\n    case '/':\n      answer = parseFloat((num1 / num2).toFixed(2)); // Round to 2 decimal places\n      break;\n    case '%':\n      answer = num1 % num2;\n      break;\n    default:\n      break;\n  }\n  const options = [answer];\n  while (options.length < 4) {\n    const option = (Math.random() < 0.5 ? -1 : 1) * (Math.floor(Math.random() * 5) + 1) + answer;\n    if (!options.includes(option)) {\n      options.push(parseFloat(option.toFixed(2))); // Ensure options are rounded to 2 decimal places\n    }\n  }\n  options.sort(() => Math.random() - 0.5);\n  return {\n    num1,\n    num2,\n    operator,\n    answer,\n    options\n  };\n};\nconst Question = ({\n  question,\n  timeLeft,\n  onAnswer,\n  questionNumber\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number\",\n      children: [\"Question \", questionNumber, \"/25\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slot-machine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: question.num1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: question.operator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot\",\n        children: question.num2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAnswer(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"Time left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Question;\nconst Game = ({\n  playerName,\n  onGameOver\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(30);\n  useEffect(() => {\n    const generatedQuestions = Array.from({\n      length: 25\n    }, generateQuestion);\n    setQuestions(generatedQuestions);\n  }, []);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else {\n      nextQuestion(0);\n    }\n  }, [timeLeft, currentQuestion]);\n  const nextQuestion = points => {\n    setScore(score + points);\n    if (currentQuestion < 24) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30 - currentQuestion * 1);\n    } else {\n      onGameOver(score + points);\n    }\n  };\n  const handleAnswer = option => {\n    if (questions[currentQuestion].answer === option) {\n      nextQuestion(3);\n    } else {\n      nextQuestion(-1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [questions.length > 0 && /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestion],\n      timeLeft: timeLeft,\n      onAnswer: handleAnswer,\n      questionNumber: currentQuestion + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"k8PvpwSGxL0yhtjsTH+q4/FXaaU=\");\n_c2 = Game;\nconst WinScreen = ({\n  score,\n  playerName,\n  onRestart\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"win-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Congratulations, \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your final score is: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRestart,\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_c3 = WinScreen;\nfunction App() {\n  _s2();\n  const [playerName, setPlayerName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n  const startGame = () => {\n    if (playerName.trim() !== '') {\n      setGameStarted(true);\n      setGameOver(false);\n      setFinalScore(0);\n    }\n  };\n  const handleGameOver = score => {\n    setGameOver(true);\n    setGameStarted(false);\n    setFinalScore(score);\n  };\n  const restartGame = () => {\n    setPlayerName('');\n    setGameStarted(false);\n    setGameOver(false);\n    setFinalScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !gameStarted && !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Math Puzzle Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : gameStarted ? /*#__PURE__*/_jsxDEV(Game, {\n      playerName: playerName,\n      onGameOver: handleGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WinScreen, {\n      score: finalScore,\n      playerName: playerName,\n      onRestart: restartGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"bhf0JHCi5ZjuPEzFv97/dfMkkG8=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"WinScreen\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","operators","generateRandomNumber","Math","floor","random","generateRandomOperator","length","generateQuestion","num1","num2","operator","answer","parseFloat","toFixed","options","option","includes","push","sort","Question","question","timeLeft","onAnswer","questionNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","Game","playerName","onGameOver","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","setTimeLeft","generatedQuestions","Array","from","timer","setInterval","clearInterval","nextQuestion","points","handleAnswer","_c2","WinScreen","onRestart","_c3","App","_s2","setPlayerName","gameStarted","setGameStarted","gameOver","setGameOver","finalScore","setFinalScore","startGame","trim","handleGameOver","restartGame","type","placeholder","value","onChange","e","target","_c4","$RefreshReg$"],"sources":["/home/el_professor258/Documents/math/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst operators = ['+', '-', '*', '/', '%'];\n\nconst generateRandomNumber = () => Math.floor(Math.random() * 90) + 10; // Two-digit numbers from 10 to 99\nconst generateRandomOperator = () => operators[Math.floor(Math.random() * operators.length)];\n\nconst generateQuestion = () => {\n  const num1 = generateRandomNumber();\n  const num2 = generateRandomNumber();\n  const operator = generateRandomOperator();\n  let answer;\n  switch (operator) {\n    case '+':\n      answer = num1 + num2;\n      break;\n    case '-':\n      answer = num1 - num2;\n      break;\n    case '*':\n      answer = num1 * num2;\n      break;\n    case '/':\n      answer = parseFloat((num1 / num2).toFixed(2)); // Round to 2 decimal places\n      break;\n    case '%':\n      answer = num1 % num2;\n      break;\n    default:\n      break;\n  }\n\n  const options = [answer];\n  while (options.length < 4) {\n    const option = (Math.random() < 0.5 ? -1 : 1) * (Math.floor(Math.random() * 5) + 1) + answer;\n    if (!options.includes(option)) {\n      options.push(parseFloat(option.toFixed(2))); // Ensure options are rounded to 2 decimal places\n    }\n  }\n  options.sort(() => Math.random() - 0.5);\n\n  return { num1, num2, operator, answer, options };\n};\n\nconst Question = ({ question, timeLeft, onAnswer, questionNumber }) => {\n  return (\n    <div className=\"question\">\n      <div className=\"question-number\">Question {questionNumber}/25</div>\n      <div className=\"slot-machine\">\n        <div className=\"slot\">{question.num1}</div>\n        <div className=\"slot\">{question.operator}</div>\n        <div className=\"slot\">{question.num2}</div>\n      </div>\n      <div className=\"options\">\n        {question.options.map((option, index) => (\n          <button key={index} onClick={() => onAnswer(option)}>\n            {option}\n          </button>\n        ))}\n      </div>\n      <div className=\"timer\">Time left: {timeLeft}s</div>\n    </div>\n  );\n};\n\nconst Game = ({ playerName, onGameOver }) => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(30);\n\n  useEffect(() => {\n    const generatedQuestions = Array.from({ length: 25 }, generateQuestion);\n    setQuestions(generatedQuestions);\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else {\n      nextQuestion(0);\n    }\n  }, [timeLeft, currentQuestion]);\n\n  const nextQuestion = (points) => {\n    setScore(score + points);\n    if (currentQuestion < 24) {\n      setCurrentQuestion(currentQuestion + 1);\n      setTimeLeft(30 - currentQuestion * 1);\n    } else {\n      onGameOver(score + points);\n    }\n  };\n\n  const handleAnswer = (option) => {\n    if (questions[currentQuestion].answer === option) {\n      nextQuestion(3);\n    } else {\n      nextQuestion(-1);\n    }\n  };\n\n  return (\n    <div className=\"game\">\n      {questions.length > 0 && (\n        <Question\n          question={questions[currentQuestion]}\n          timeLeft={timeLeft}\n          onAnswer={handleAnswer}\n          questionNumber={currentQuestion + 1}\n        />\n      )}\n      <div className=\"score\">Score: {score}</div>\n    </div>\n  );\n};\n\nconst WinScreen = ({ score, playerName, onRestart }) => {\n  return (\n    <div className=\"win-screen\">\n      <h1>Congratulations, {playerName}!</h1>\n      <p>Your final score is: {score}</p>\n      <button onClick={onRestart}>Play Again</button>\n    </div>\n  );\n};\n\nfunction App() {\n  const [playerName, setPlayerName] = useState('');\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [finalScore, setFinalScore] = useState(0);\n\n  const startGame = () => {\n    if (playerName.trim() !== '') {\n      setGameStarted(true);\n      setGameOver(false);\n      setFinalScore(0);\n    }\n  };\n\n  const handleGameOver = (score) => {\n    setGameOver(true);\n    setGameStarted(false);\n    setFinalScore(score);\n  };\n\n  const restartGame = () => {\n    setPlayerName('');\n    setGameStarted(false);\n    setGameOver(false);\n    setFinalScore(0);\n  };\n\n  return (\n    <div className=\"App\">\n      {!gameStarted && !gameOver ? (\n        <div className=\"start-screen\">\n          <h1>Welcome to the Math Puzzle Game</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={playerName}\n            onChange={(e) => setPlayerName(e.target.value)}\n          />\n          <button onClick={startGame}>Start</button>\n        </div>\n      ) : gameStarted ? (\n        <Game playerName={playerName} onGameOver={handleGameOver} />\n      ) : (\n        <WinScreen score={finalScore} playerName={playerName} onRestart={restartGame} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}