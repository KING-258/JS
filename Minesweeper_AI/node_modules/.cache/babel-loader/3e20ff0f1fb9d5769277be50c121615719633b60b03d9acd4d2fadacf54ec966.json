{"ast":null,"code":"var _jsxFileName = \"/home/el_professor258/Documents/JS/Minesweeper_AI/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genEmptyGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    grid.push(Array.from(Array(cols), () => ({\n      isMine: false,\n      revealed: false,\n      neighborCount: 0\n    })));\n  }\n  return grid;\n};\nconst App = () => {\n  _s();\n  const [size, setSize] = useState(null);\n  const [grid, setGrid] = useState([]);\n  const [over, setOver] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [bombs, setBombs] = useState(0);\n  const [time, setTime] = useState(0);\n  const [suggested, setSuggested] = useState(null);\n  const [hints, setHints] = useState(3);\n  const timerRef = useRef(null);\n  const selectSize = size => {\n    setSize(size);\n    setStarted(false);\n    setHints(3);\n  };\n  useEffect(() => {\n    if (size) {\n      const rows = size;\n      const cols = size;\n      const newGrid = genEmptyGrid(rows, cols);\n      const mines = Math.floor(rows * cols * 0.15);\n      setBombs(mines);\n      for (let i = 0; i < mines; i++) {\n        let r = Math.floor(Math.random() * rows);\n        let c = Math.floor(Math.random() * cols);\n        while (newGrid[r][c].isMine) {\n          r = Math.floor(Math.random() * rows);\n          c = Math.floor(Math.random() * cols);\n        }\n        newGrid[r][c].isMine = true;\n        updateNeighbors(newGrid, r, c);\n      }\n      setGrid(newGrid);\n    }\n  }, [size]);\n  useEffect(() => {\n    if (started && !over) {\n      timerRef.current = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(timerRef.current);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [started, over]);\n  const updateNeighbors = (grid, row, col) => {\n    const dirs = [[1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1], [0, -1], [1, -1]];\n    dirs.forEach(([dr, dc]) => {\n      const newRow = row + dr;\n      const newCol = col + dc;\n      if (newRow >= 0 && newRow < size && newCol >= 0 && newCol < size) {\n        grid[newRow][newCol].neighborCount++;\n      }\n    });\n  };\n  const reveal = (row, col) => {\n    if (over || grid[row][col].revealed) return;\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].revealed = true;\n    if (newGrid[row][col].isMine) {\n      setOver(true);\n    } else if (newGrid[row][col].neighborCount === 0) {\n      revealEmpty(newGrid, row, col);\n    }\n    setGrid(newGrid);\n    checkEnd(newGrid);\n  };\n  const revealEmpty = (grid, row, col) => {\n    const dirs = [[1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1], [0, -1], [1, -1]];\n    dirs.forEach(([dr, dc]) => {\n      const newRow = row + dr;\n      const newCol = col + dc;\n      if (newRow >= 0 && newRow < size && newCol >= 0 && newCol < size) {\n        if (!grid[newRow][newCol].revealed) {\n          grid[newRow][newCol].revealed = true;\n          if (grid[newRow][newCol].neighborCount === 0) {\n            revealEmpty(grid, newRow, newCol);\n          }\n        }\n      }\n    });\n  };\n  const checkEnd = grid => {\n    const nonMines = size * size - bombs;\n    let revealedCells = 0;\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (!cell.isMine && cell.revealed) {\n          revealedCells++;\n        }\n      });\n    });\n    if (revealedCells === nonMines) {\n      setOver(true);\n    }\n  };\n  const restart = () => {\n    setOver(false);\n    setTime(0);\n    setStarted(false);\n    setGrid([]);\n    setSize(null);\n    setHints(3);\n  };\n  const start = () => {\n    setStarted(true);\n  };\n  const suggest = () => {\n    if (hints > 0) {\n      const shuffledCoords = shuffleCoords(size);\n      for (const [row, col] of shuffledCoords) {\n        if (!grid[row][col].revealed && !grid[row][col].isMine) {\n          setSuggested({\n            row,\n            col\n          });\n          setHints(prev => prev - 1);\n          return;\n        }\n      }\n    }\n  };\n  const shuffleCoords = size => {\n    const coords = [];\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        coords.push([i, j]);\n      }\n    }\n    for (let i = coords.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [coords[i], coords[j]] = [coords[j], coords[i]];\n    }\n    return coords;\n  };\n  const renderCell = (row, col) => {\n    const cell = grid[row][col];\n    let content = '';\n    if (cell.revealed) {\n      if (cell.isMine) {\n        content = 'ðŸ’£';\n      } else if (cell.neighborCount > 0) {\n        content = cell.neighborCount;\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cell ${cell.revealed ? 'revealed' : ''} ${suggested && suggested.row === row && suggested.col === col ? 'suggested' : ''}`,\n      onClick: () => reveal(row, col),\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), size === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"size-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectSize(8),\n        children: \"8x8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectSize(12),\n        children: \"12x12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => selectSize(16),\n        children: \"16x16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), size && !started && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), size && started && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Bombs: \", bombs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Time: \", formatTime(time)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Hints: \", hints]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restart,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: suggest,\n          disabled: hints === 0,\n          children: \"Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: renderCell(rowIndex, colIndex)\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), over && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0XqlXrZiawHk8/7OOxvFolpk2c4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","genEmptyGrid","rows","cols","grid","i","push","Array","from","isMine","revealed","neighborCount","App","_s","size","setSize","setGrid","over","setOver","started","setStarted","bombs","setBombs","time","setTime","suggested","setSuggested","hints","setHints","timerRef","selectSize","newGrid","mines","Math","floor","r","random","c","updateNeighbors","current","setInterval","prev","clearInterval","row","col","dirs","forEach","dr","dc","newRow","newCol","reveal","JSON","parse","stringify","revealEmpty","checkEnd","nonMines","revealedCells","cell","restart","start","suggest","shuffledCoords","shuffleCoords","coords","j","length","renderCell","content","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","minutes","remainingSeconds","disabled","map","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["/home/el_professor258/Documents/JS/Minesweeper_AI/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nconst genEmptyGrid = (rows, cols) => {\n  const grid = [];\n  for (let i = 0; i < rows; i++) {\n    grid.push(Array.from(Array(cols), () => ({\n      isMine: false,\n      revealed: false,\n      neighborCount: 0\n    })));\n  }\n  return grid;\n}\nconst App = () => {\n  const [size, setSize] = useState(null);\n  const [grid, setGrid] = useState([]);\n  const [over, setOver] = useState(false);\n  const [started, setStarted] = useState(false);\n  const [bombs, setBombs] = useState(0);\n  const [time, setTime] = useState(0);\n  const [suggested, setSuggested] = useState(null);\n  const [hints, setHints] = useState(3); \n  const timerRef = useRef(null);\n  const selectSize = (size) => {\n    setSize(size);\n    setStarted(false); \n    setHints(3);\n  };\n  useEffect(() => {\n    if (size) {\n      const rows = size;\n      const cols = size;\n      const newGrid = genEmptyGrid(rows, cols);\n      const mines = Math.floor(rows * cols * 0.15); \n      setBombs(mines);\n      for (let i = 0; i < mines; i++) {\n        let r = Math.floor(Math.random() * rows);\n        let c = Math.floor(Math.random() * cols);\n        while (newGrid[r][c].isMine) {\n          r = Math.floor(Math.random() * rows);\n          c = Math.floor(Math.random() * cols);\n        }\n        newGrid[r][c].isMine = true;\n        updateNeighbors(newGrid, r, c);\n      }\n      setGrid(newGrid);\n    }\n  }, [size]);\n  useEffect(() => {\n    if (started && !over) {\n      timerRef.current = setInterval(() => {\n        setTime(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(timerRef.current);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [started, over]);\n  const updateNeighbors = (grid, row, col) => {\n    const dirs = [\n      [1, 0], [1, 1], [0, 1], [-1, 1],\n      [-1, 0], [-1, -1], [0, -1], [1, -1]\n    ];\n    dirs.forEach(([dr, dc]) => {\n      const newRow = row + dr;\n      const newCol = col + dc;\n      if (newRow >= 0 && newRow < size && newCol >= 0 && newCol < size) {\n        grid[newRow][newCol].neighborCount++;\n      }\n    });\n  };\n  const reveal = (row, col) => {\n    if (over || grid[row][col].revealed) return;\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].revealed = true;\n    if (newGrid[row][col].isMine) {\n      setOver(true);\n    } else if (newGrid[row][col].neighborCount === 0) {\n      revealEmpty(newGrid, row, col);\n    }\n    setGrid(newGrid);\n    checkEnd(newGrid);\n  };\n  const revealEmpty = (grid, row, col) => {\n    const dirs = [\n      [1, 0], [1, 1], [0, 1], [-1, 1],\n      [-1, 0], [-1, -1], [0, -1], [1, -1]\n    ];\n    dirs.forEach(([dr, dc]) => {\n      const newRow = row + dr;\n      const newCol = col + dc;\n      if (newRow >= 0 && newRow < size && newCol >= 0 && newCol < size) {\n        if (!grid[newRow][newCol].revealed) {\n          grid[newRow][newCol].revealed = true;\n          if (grid[newRow][newCol].neighborCount === 0) {\n            revealEmpty(grid, newRow, newCol);\n          }\n        }\n      }\n    });\n  };\n  const checkEnd = (grid) => {\n    const nonMines = size * size - bombs;\n    let revealedCells = 0;\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (!cell.isMine && cell.revealed) {\n          revealedCells++;\n        }\n      });\n    });\n    if (revealedCells === nonMines) {\n      setOver(true);\n    }\n  };\n  const restart = () => {\n    setOver(false);\n    setTime(0);\n    setStarted(false);\n    setGrid([]);\n    setSize(null);\n    setHints(3);\n  };\n  const start = () => {\n    setStarted(true);\n  };\n  const suggest = () => {\n    if (hints > 0) {\n      const shuffledCoords = shuffleCoords(size);\n      for (const [row, col] of shuffledCoords) {\n        if (!grid[row][col].revealed && !grid[row][col].isMine) {\n          setSuggested({ row, col });\n          setHints(prev => prev - 1);\n          return;\n        }\n      }\n    }\n  };\n  const shuffleCoords = (size) => {\n    const coords = [];\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        coords.push([i, j]);\n      }\n    }\n    for (let i = coords.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [coords[i], coords[j]] = [coords[j], coords[i]];\n    }\n    return coords;\n  };\n  const renderCell = (row, col) => {\n    const cell = grid[row][col];\n    let content = '';\n    if (cell.revealed) {\n      if (cell.isMine) {\n        content = 'ðŸ’£';\n      } else if (cell.neighborCount > 0) {\n        content = cell.neighborCount;\n      }\n    }\n    return (\n      <div\n        className={`cell ${cell.revealed ? 'revealed' : ''} ${suggested && suggested.row === row && suggested.col === col ? 'suggested' : ''}`}\n        onClick={() => reveal(row, col)}\n      >\n        {content}\n      </div>\n    );\n  };\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  return (\n    <div className=\"App\">\n      <h1>Minesweeper</h1>\n      {size === null && (\n        <div className=\"size-selection\">\n          <button onClick={() => selectSize(8)}>8x8</button>\n          <button onClick={() => selectSize(12)}>12x12</button>\n          <button onClick={() => selectSize(16)}>16x16</button>\n        </div>\n      )}\n      {size && !started && (\n        <button onClick={start}>Start</button>\n      )}\n      {size && started && (\n        <>\n          <div className=\"game-info\">\n            <div>Bombs: {bombs}</div>\n            <div>Time: {formatTime(time)}</div>\n            <div>Hints: {hints}</div>\n            <button onClick={restart}>Restart</button>\n            <button onClick={suggest} disabled={hints === 0}>Hint</button>\n          </div>\n          <div className=\"grid\">\n            {grid.map((row, rowIndex) => (\n              <div key={rowIndex} className=\"row\">\n                {row.map((cell, colIndex) => (\n                  <div key={colIndex}>\n                    {renderCell(rowIndex, colIndex)}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n          {over && <h2>Game Over</h2>}\n        </>\n      )}\n    </div>\n  );\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACnB,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACnC,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,EAAE,EAAE;IAC7BD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACJ,IAAI,CAAC,EAAE,OAAO;MACvCM,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC,CAAC;EACN;EACA,OAAOP,IAAI;AACb,CAAC;AACD,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEY,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMmC,QAAQ,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMkC,UAAU,GAAIhB,IAAI,IAAK;IAC3BC,OAAO,CAACD,IAAI,CAAC;IACbM,UAAU,CAAC,KAAK,CAAC;IACjBQ,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EACDjC,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,EAAE;MACR,MAAMZ,IAAI,GAAGY,IAAI;MACjB,MAAMX,IAAI,GAAGW,IAAI;MACjB,MAAMiB,OAAO,GAAG9B,YAAY,CAACC,IAAI,EAAEC,IAAI,CAAC;MACxC,MAAM6B,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAChC,IAAI,GAAGC,IAAI,GAAG,IAAI,CAAC;MAC5CmB,QAAQ,CAACU,KAAK,CAAC;MACf,KAAK,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2B,KAAK,EAAE3B,CAAC,EAAE,EAAE;QAC9B,IAAI8B,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGlC,IAAI,CAAC;QACxC,IAAImC,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGjC,IAAI,CAAC;QACxC,OAAO4B,OAAO,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC5B,MAAM,EAAE;UAC3B0B,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGlC,IAAI,CAAC;UACpCmC,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGjC,IAAI,CAAC;QACtC;QACA4B,OAAO,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC5B,MAAM,GAAG,IAAI;QAC3B6B,eAAe,CAACP,OAAO,EAAEI,CAAC,EAAEE,CAAC,CAAC;MAChC;MACArB,OAAO,CAACe,OAAO,CAAC;IAClB;EACF,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EACVnB,SAAS,CAAC,MAAM;IACd,IAAIwB,OAAO,IAAI,CAACF,IAAI,EAAE;MACpBY,QAAQ,CAACU,OAAO,GAAGC,WAAW,CAAC,MAAM;QACnChB,OAAO,CAACiB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACb,QAAQ,CAACU,OAAO,CAAC;IACjC;IACA,OAAO,MAAMG,aAAa,CAACb,QAAQ,CAACU,OAAO,CAAC;EAC9C,CAAC,EAAE,CAACpB,OAAO,EAAEF,IAAI,CAAC,CAAC;EACnB,MAAMqB,eAAe,GAAGA,CAAClC,IAAI,EAAEuC,GAAG,EAAEC,GAAG,KAAK;IAC1C,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACpC;IACDA,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,EAAE,CAAC,KAAK;MACzB,MAAMC,MAAM,GAAGN,GAAG,GAAGI,EAAE;MACvB,MAAMG,MAAM,GAAGN,GAAG,GAAGI,EAAE;MACvB,IAAIC,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGnC,IAAI,IAAIoC,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGpC,IAAI,EAAE;QAChEV,IAAI,CAAC6C,MAAM,CAAC,CAACC,MAAM,CAAC,CAACvC,aAAa,EAAE;MACtC;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMwC,MAAM,GAAGA,CAACR,GAAG,EAAEC,GAAG,KAAK;IAC3B,IAAI3B,IAAI,IAAIb,IAAI,CAACuC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAClC,QAAQ,EAAE;IACrC,MAAMqB,OAAO,GAAGqB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAClD,IAAI,CAAC,CAAC;IAChD2B,OAAO,CAACY,GAAG,CAAC,CAACC,GAAG,CAAC,CAAClC,QAAQ,GAAG,IAAI;IACjC,IAAIqB,OAAO,CAACY,GAAG,CAAC,CAACC,GAAG,CAAC,CAACnC,MAAM,EAAE;MAC5BS,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,MAAM,IAAIa,OAAO,CAACY,GAAG,CAAC,CAACC,GAAG,CAAC,CAACjC,aAAa,KAAK,CAAC,EAAE;MAChD4C,WAAW,CAACxB,OAAO,EAAEY,GAAG,EAAEC,GAAG,CAAC;IAChC;IACA5B,OAAO,CAACe,OAAO,CAAC;IAChByB,QAAQ,CAACzB,OAAO,CAAC;EACnB,CAAC;EACD,MAAMwB,WAAW,GAAGA,CAACnD,IAAI,EAAEuC,GAAG,EAAEC,GAAG,KAAK;IACtC,MAAMC,IAAI,GAAG,CACX,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CACpC;IACDA,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,EAAE,EAAEC,EAAE,CAAC,KAAK;MACzB,MAAMC,MAAM,GAAGN,GAAG,GAAGI,EAAE;MACvB,MAAMG,MAAM,GAAGN,GAAG,GAAGI,EAAE;MACvB,IAAIC,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGnC,IAAI,IAAIoC,MAAM,IAAI,CAAC,IAAIA,MAAM,GAAGpC,IAAI,EAAE;QAChE,IAAI,CAACV,IAAI,CAAC6C,MAAM,CAAC,CAACC,MAAM,CAAC,CAACxC,QAAQ,EAAE;UAClCN,IAAI,CAAC6C,MAAM,CAAC,CAACC,MAAM,CAAC,CAACxC,QAAQ,GAAG,IAAI;UACpC,IAAIN,IAAI,CAAC6C,MAAM,CAAC,CAACC,MAAM,CAAC,CAACvC,aAAa,KAAK,CAAC,EAAE;YAC5C4C,WAAW,CAACnD,IAAI,EAAE6C,MAAM,EAAEC,MAAM,CAAC;UACnC;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMM,QAAQ,GAAIpD,IAAI,IAAK;IACzB,MAAMqD,QAAQ,GAAG3C,IAAI,GAAGA,IAAI,GAAGO,KAAK;IACpC,IAAIqC,aAAa,GAAG,CAAC;IACrBtD,IAAI,CAAC0C,OAAO,CAACH,GAAG,IAAI;MAClBA,GAAG,CAACG,OAAO,CAACa,IAAI,IAAI;QAClB,IAAI,CAACA,IAAI,CAAClD,MAAM,IAAIkD,IAAI,CAACjD,QAAQ,EAAE;UACjCgD,aAAa,EAAE;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAIA,aAAa,KAAKD,QAAQ,EAAE;MAC9BvC,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EACD,MAAM0C,OAAO,GAAGA,CAAA,KAAM;IACpB1C,OAAO,CAAC,KAAK,CAAC;IACdM,OAAO,CAAC,CAAC,CAAC;IACVJ,UAAU,CAAC,KAAK,CAAC;IACjBJ,OAAO,CAAC,EAAE,CAAC;IACXD,OAAO,CAAC,IAAI,CAAC;IACba,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EACD,MAAMiC,KAAK,GAAGA,CAAA,KAAM;IAClBzC,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAM0C,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAInC,KAAK,GAAG,CAAC,EAAE;MACb,MAAMoC,cAAc,GAAGC,aAAa,CAAClD,IAAI,CAAC;MAC1C,KAAK,MAAM,CAAC6B,GAAG,EAAEC,GAAG,CAAC,IAAImB,cAAc,EAAE;QACvC,IAAI,CAAC3D,IAAI,CAACuC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAClC,QAAQ,IAAI,CAACN,IAAI,CAACuC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACnC,MAAM,EAAE;UACtDiB,YAAY,CAAC;YAAEiB,GAAG;YAAEC;UAAI,CAAC,CAAC;UAC1BhB,QAAQ,CAACa,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;UAC1B;QACF;MACF;IACF;EACF,CAAC;EACD,MAAMuB,aAAa,GAAIlD,IAAI,IAAK;IAC9B,MAAMmD,MAAM,GAAG,EAAE;IACjB,KAAK,IAAI5D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,IAAI,EAAET,CAAC,EAAE,EAAE;MAC7B,KAAK,IAAI6D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpD,IAAI,EAAEoD,CAAC,EAAE,EAAE;QAC7BD,MAAM,CAAC3D,IAAI,CAAC,CAACD,CAAC,EAAE6D,CAAC,CAAC,CAAC;MACrB;IACF;IACA,KAAK,IAAI7D,CAAC,GAAG4D,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE9D,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1C,MAAM6D,CAAC,GAAGjC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACG,MAAM,CAAC,CAAC,IAAI/B,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAAC4D,MAAM,CAAC5D,CAAC,CAAC,EAAE4D,MAAM,CAACC,CAAC,CAAC,CAAC,GAAG,CAACD,MAAM,CAACC,CAAC,CAAC,EAAED,MAAM,CAAC5D,CAAC,CAAC,CAAC;IACjD;IACA,OAAO4D,MAAM;EACf,CAAC;EACD,MAAMG,UAAU,GAAGA,CAACzB,GAAG,EAAEC,GAAG,KAAK;IAC/B,MAAMe,IAAI,GAAGvD,IAAI,CAACuC,GAAG,CAAC,CAACC,GAAG,CAAC;IAC3B,IAAIyB,OAAO,GAAG,EAAE;IAChB,IAAIV,IAAI,CAACjD,QAAQ,EAAE;MACjB,IAAIiD,IAAI,CAAClD,MAAM,EAAE;QACf4D,OAAO,GAAG,IAAI;MAChB,CAAC,MAAM,IAAIV,IAAI,CAAChD,aAAa,GAAG,CAAC,EAAE;QACjC0D,OAAO,GAAGV,IAAI,CAAChD,aAAa;MAC9B;IACF;IACA,oBACEb,OAAA;MACEwE,SAAS,EAAG,QAAOX,IAAI,CAACjD,QAAQ,GAAG,UAAU,GAAG,EAAG,IAAGe,SAAS,IAAIA,SAAS,CAACkB,GAAG,KAAKA,GAAG,IAAIlB,SAAS,CAACmB,GAAG,KAAKA,GAAG,GAAG,WAAW,GAAG,EAAG,EAAE;MACvI2B,OAAO,EAAEA,CAAA,KAAMpB,MAAM,CAACR,GAAG,EAAEC,GAAG,CAAE;MAAA4B,QAAA,EAE/BH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV,CAAC;EACD,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAG9C,IAAI,CAACC,KAAK,CAAC4C,OAAO,GAAG,EAAE,CAAC;IACxC,MAAME,gBAAgB,GAAGF,OAAO,GAAG,EAAE;IACrC,OAAQ,GAAEC,OAAQ,IAAGC,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,gBAAiB,EAAC;EAC5E,CAAC;EACD,oBACElF,OAAA;IAAKwE,SAAS,EAAC,KAAK;IAAAE,QAAA,gBAClB1E,OAAA;MAAA0E,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB9D,IAAI,KAAK,IAAI,iBACZhB,OAAA;MAAKwE,SAAS,EAAC,gBAAgB;MAAAE,QAAA,gBAC7B1E,OAAA;QAAQyE,OAAO,EAAEA,CAAA,KAAMzC,UAAU,CAAC,CAAC,CAAE;QAAA0C,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClD9E,OAAA;QAAQyE,OAAO,EAAEA,CAAA,KAAMzC,UAAU,CAAC,EAAE,CAAE;QAAA0C,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrD9E,OAAA;QAAQyE,OAAO,EAAEA,CAAA,KAAMzC,UAAU,CAAC,EAAE,CAAE;QAAA0C,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN,EACA9D,IAAI,IAAI,CAACK,OAAO,iBACfrB,OAAA;MAAQyE,OAAO,EAAEV,KAAM;MAAAW,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACtC,EACA9D,IAAI,IAAIK,OAAO,iBACdrB,OAAA,CAAAE,SAAA;MAAAwE,QAAA,gBACE1E,OAAA;QAAKwE,SAAS,EAAC,WAAW;QAAAE,QAAA,gBACxB1E,OAAA;UAAA0E,QAAA,GAAK,SAAO,EAACnD,KAAK;QAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzB9E,OAAA;UAAA0E,QAAA,GAAK,QAAM,EAACK,UAAU,CAACtD,IAAI,CAAC;QAAA;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnC9E,OAAA;UAAA0E,QAAA,GAAK,SAAO,EAAC7C,KAAK;QAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzB9E,OAAA;UAAQyE,OAAO,EAAEX,OAAQ;UAAAY,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1C9E,OAAA;UAAQyE,OAAO,EAAET,OAAQ;UAACmB,QAAQ,EAAEtD,KAAK,KAAK,CAAE;UAAA6C,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN9E,OAAA;QAAKwE,SAAS,EAAC,MAAM;QAAAE,QAAA,EAClBpE,IAAI,CAAC8E,GAAG,CAAC,CAACvC,GAAG,EAAEwC,QAAQ,kBACtBrF,OAAA;UAAoBwE,SAAS,EAAC,KAAK;UAAAE,QAAA,EAChC7B,GAAG,CAACuC,GAAG,CAAC,CAACvB,IAAI,EAAEyB,QAAQ,kBACtBtF,OAAA;YAAA0E,QAAA,EACGJ,UAAU,CAACe,QAAQ,EAAEC,QAAQ;UAAC,GADvBA,QAAQ;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACN;QAAC,GALMO,QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACL3D,IAAI,iBAAInB,OAAA;QAAA0E,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAC3B,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA/D,EAAA,CAxMKD,GAAG;AAAAyE,EAAA,GAAHzE,GAAG;AAyMT,eAAeA,GAAG;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}